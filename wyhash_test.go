package wyhash

import "testing"

var vecs = [...]uint64{
	0,
	0xa08bc05136a25b45,
	0x7c24f9f3e65205c5,
	0x319272d82f1a1fe8,
	0x941b6c11632f8a7d,
	0xce20a197ad6c94dc,
	0x7182f8692147defe,
	0x40a3afc82c7961f6,
	0xd5ca514071bdd4dc,
	0x60a0a56d80d6f906,
	0x75e7dc63802e05a4,
	0xfd99f9a34e3bcef1,
	0x3ec29c844c3b3990,
	0xf481aa72a916b384,
	0x867bc4a8ebf545c5,
	0x312562f55f1e5e4b,
	0x9bb03d1113fb3,
	0x7b7fdb969f79acb5,
	0x19c47bc871b7e7a3,
	0x6566fbed7f424bc5,
	0x2d4fc36b7b35b94c,
	0xd0009a1801ed867c,
	0xe43727b45a658502,
	0xa136b21bbdd0a09d,
	0x278f37721b8854ef,
	0xe4c48e0d2de263df,
	0x8e9b0f8c038a8b9b,
	0xffde909a0b341e4f,
	0x9a4fb78f421bba4c,
	0x9a91dc5212a37da5,
	0x196004e2599a2bd5,
	0x7712c67b1cfd0a5c,
	0xa6440502e752b701,
	0xa95eb64c3c1c795f,
	0xee8a1a431651ea98,
	0xd844d15110fcf547,
	0x262a443616c1ebbf,
	0x34861e275bd1cd3c,
	0x660fddf8fafa5c2a,
	0xfc0ac1d83cd4b2c8,
	0x7652edf51a31f364,
	0xb3dcd6e4caf81385,
	0x7f32e9d64be4c641,
	0x29521d88038453d4,
	0x8a3cdc8a6c101190,
	0x5149f12b8d1b5ec4,
	0xad93acf4109b75c6,
	0x33cf739d67c18707,
	0xf3898b569ece5da2,
	0x1c7460df49eb6d94,
	0xb4985c83f8143f10,
	0x61d971a3533aa9dc,
	0xe216f1d737e9144,
	0x83b032b5450a5367,
	0x34d2eec89954f424,
	0x44829bfe2cfc50d2,
	0x184838ec34261fb2,
	0x1660c5a80e4e90c0,
	0x745f95e848667169,
	0xed00fbbd1a6a29b4,
	0x60e28afbb8689521,
	0x4f0afb66f47d7c59,
	0x8e94adc6a9798e77,
	0xd4852611987b0796,
	0x3c82ed174394749b,
	0x20145757e23257e5,
	0x37e4e220ff96d7e8,
	0xcfe26ee1edcc5901,
	0xcc62805f67736fdc,
	0x239b43be827c0b6f,
	0xa33ef4573fc7950c,
	0x57740d60804d01ac,
	0xfb1f5c8fc83a66bb,
	0xc098cc08bb3030dc,
	0xa0797be4c9ca6bbb,
	0xd57dfc24098063ca,
	0x71ce95fe79dbff88,
	0xa7de99fa0b1e5236,
	0x42ee63f6047cc5b5,
	0x157a8f65dcdb9523,
	0xbfaf679c87ca4797,
	0x235de9ed38756a8b,
	0xb9753ba70b5cadca,
	0x4bb04a47d0419eb8,
	0x20b6dae05c974897,
	0x27135d902a08527c,
	0x98610998e6a66902,
	0x3094c2e66e66ecfe,
	0x87ab01f65839f6a5,
	0xe47fd96157bc1a90,
	0xb263d2b248a0ecda,
	0x69ffe1d47117833e,
	0xf6a1b0094722b691,
	0xe8fc86f48c408109,
	0x86f9267e9e752f11,
	0x73d5e082413150c5,
	0xa7c2ed2a811e89d9,
	0x5094045e0b05dbec,
	0x54d839c973efd9f3,
	0xda528dad492cc4cb,
	0x10977f5a71b83a64,
	0xba5c4770570b1eb3,
	0xc8922316e54086eb,
	0x8aee94df8be89144,
	0x41fd72516b0a9797,
	0xbcdfd43b6c31cd50,
	0x1a1d6e5c2080dc55,
	0xd8915dfcfb53763,
	0x9a633a27ec1dd073,
	0xaaab744b66ea347c,
	0x28814d9e0fae50f2,
	0xbed5a53cf8f70d2a,
	0x610578d01e706347,
	0x6afae5dfb524d23,
	0x8388518817516f6b,
	0xe4c1a815b61d847c,
	0x292e888cc64e44ed,
	0x9ddc37792ade5dfb,
	0xe040158192f10b95,
	0x13397ee737b08d33,
	0x7d8f88c969ca8079,
	0xe5bca3a0905b3c69,
	0x79b51f666d7e56e4,
	0x260c5beccd2f2ce1,
	0xe19d3b8b72da320a,
	0xdfb8ae458b9dfde1,
	0x1a764f2980c9514,
	0xdeeab8a493ca977e,
	0x433073e994b160ea,
	0xf9ccfdb7b3439f2a,
	0xa1df00b7f64f7671,
	0x98ea2fc1f4f7e8fe,
	0xb8a2dad871ed2ba1,
	0x2e06d787e4bf3dd3,
	0xc55480a2ef5d119c,
	0x2bf6c43c7f018e47,
	0x43bcc316c9777cc0,
	0x2e15af32191d51b2,
	0x21cb491b01fc7b46,
	0xc072bb1ed2a55f57,
	0x13f6f10f9eaa3982,
	0x905ae245d0903411,
	0x1fe3f78467d36a75,
	0x8ac9784103fcf2f6,
	0x6cda818ccbc6a292,
	0xb68dd3020f337117,
	0x4331f411107a77db,
	0xf8d5787d283a2028,
	0x1ff5cdf7ec5f64ab,
	0x875f96bf2cdb7007,
	0xbba36d1ffe54bb98,
	0x69740a6794fd891,
	0x8a943a882d8fcfb5,
	0x98a107150168935,
	0x1d3a65fb252ddd5e,
	0xbad7e0a392946039,
	0xcab74e19209588d6,
	0xb13dc392285886,
	0x7df287e23c05d127,
	0x39b36b9722c1fdc6,
	0x2d0bab0949e44367,
	0xdb89a4b7046d17e6,
	0x289d99c792c90e3f,
	0xb9a194fc8fc6fdee,
	0xc7a7c51b537df384,
	0xc321d15fbfe09958,
	0xd8c2c91fa6e2eede,
	0x813dcb85ea1407f3,
	0xce79830edbf89e2b,
	0x5bea00effb14aac2,
	0x4bfa9b845d0b00ea,
	0x4b853ed0f2db2f80,
	0xe21d8aaefd5d1c60,
	0xc8644b794f41b31a,
	0x492afc29bc953512,
	0xd84dda8dece1b59f,
	0xa08b6ffd46202918,
	0xf840e20ecf13b1b9,
	0x5b826e466f08756a,
	0xa8e0c240130a5f89,
	0x1d537aef8880571d,
	0x27275558ee8d39e1,
	0x320e42a274f41673,
	0x9728350fafeb32d1,
	0x814b3d1c37166c85,
	0x4aa566d7b039d97f,
	0xe47258d3ab308f83,
	0xba4bfaac8eb05e5d,
	0x11f297df40909536,
	0x2ad6d8e16ea3a346,
	0x3a348c051c9417e1,
	0xd6fe3c6bcbcd939c,
	0x6d37d382c57193cb,
	0x63ddec374a84f0e9,
	0xd16d03391a024ae,
	0x2e54d04468b84c5b,
	0xf34a96a9d081047a,
	0xa9ca7c1051546289,
	0x1903bfc7b89426bd,
	0xd0478fa4e6e5162e,
	0xe089342b893a4ee4,
	0xf11316484af75394,
	0x67e95e7fda8768c4,
	0x13ff1d5d881b59e1,
	0x10045130af8bf180,
	0xbae9d3ea34fb4ec7,
	0x856cdcdf0f8cfca0,
	0x8efae9c562107369,
	0x61be069b5d77893d,
	0x76e9485c9b73e731,
	0x65aed2e50b13bd48,
	0x4b4a0f1d665663f7,
	0xb573984877fe23d5,
	0xb6ecd24284b2470e,
	0x8ab8ad89f35db4b7,
	0x48ba6ae45753d25,
	0x69c17b0bab320415,
	0x29bf545d136e16d,
	0xd2b9faffa120f1ab,
	0x9be6f29182a4b90e,
	0xf8e5b09642766af7,
	0x8f14601d1c52538f,
	0xb323530fba1d2463,
	0x912b25bd5a2ec579,
	0x73e8bcc91a577222,
	0xb48e1dfd70801628,
	0xc7aef332295e1d50,
	0x6c0eb6717e3f8204,
	0xca56b2f1bc7c4a50,
	0x55a14113d49adfde,
	0xde442aec1909b0fd,
	0x1e5cdcfc97aa7a96,
	0x3b0ac328548df92f,
	0xf5b3b6c263c1f2ca,
	0xa9eda8abbe700256,
	0xe6bb937824091e4a,
	0x5c37a5bbb485628e,
	0xf16e28503f31f40b,
	0x9cccf8e8f7986ddb,
	0xee010a81b59ce70d,
	0x5b7862ceb74ae7cc,
	0x218d07fd974a03d3,
	0x3fe48d9a27650b0d,
	0x4a75f58f32b36310,
	0x163f8b8857fda1e6,
	0x702691f01a5a34cf,
	0xe4b0bf2eaf52c01d,
	0xdcaf6047dd23af0b,
	0x2c08d116131a35d9,
	0xb1f0a8f42aa71582,
	0x963459b13cc4bbcf,
	0xbce2d0f4b0b6010b,
	0x3970cf939cf4ee49,
	0xca34caa6cfaa65fe,
	0x724a90b7afb708a,
	0x7f3c6b0cf4c8e55a,
}

func TestWyhash(t *testing.T) {
	var data []byte

	for i, want := range vecs {
		data = append(data, byte(i))
		got := Hash(data[:i], 0x0102030405060708)
		if i != 0 && got != want {
			t.Errorf("Sum64(...%d)=%x, want %x", i, got, want)
		}
	}
}
